version: 2.1

jobs:
  build-and-deploy:
    docker:
      - image: cimg/go:1.24.4
    steps:
      - setup_remote_docker:
          docker_layer_caching: true
      - checkout
      - restore_cache:
          key: go-mod-{{ checksum "go.sum" }}
      - run:
          name: Download Go Modules
          command: |
            go env -w GOPRIVATE=github.com/cbartram
            git config --global url."https://$GITHUB_USER:$GITHUB_TOKEN@github.com/cbartram/".insteadOf "https://github.com/cbartram/"
            go mod download
      - run:
          name: Build Go Binary
          command: GOOS=linux GOARCH=amd64 CGO_ENABLED=0 go build -o main main.go
      - run:
          name: Run Tests
          command: GOOS=linux GOARCH=amd64 CGO_ENABLED=0 go test -v ./...
      - save_cache:
          key: go-mod-{{ checksum "go.sum" }}
          paths:
            - /home/circleci/go/pkg/mod
  deploy-prod:
    docker:
      - image: cimg/base:stable
    steps:
      - setup_remote_docker:
          docker_layer_caching: true
      - checkout
      - run:
          name: Install ArgoCD
          command: |
            URL=https://github.com/argoproj/argo-cd/releases/latest/download/argocd-linux-amd64
            [ -w /usr/local/bin ] && SUDO="" || SUDO=sudo
            $SUDO curl --insecure -sSL -o /usr/local/bin/argocd $URL
            $SUDO chmod +x /usr/local/bin/argocd
            
            argocd login argocd-kraken.duckdns.org --insecure --username $ARGOCD_USERNAME --password $ARGOCD_PASSWORD --grpc-web
      - run:
          name: Build and Push Image
          command: |
            VERSION_TAG="0.1.$CIRCLE_BUILD_NUM"
            IMAGE_NAME_VERSION="$DOCKER_USER/kraken-sockets:$VERSION_TAG"

            docker build . -f Dockerfile -t "$IMAGE_NAME_VERSION" -t $DOCKER_USER/kraken-sockets:latest
            echo $DOCKER_TOKEN | docker login -u $DOCKER_USER --password-stdin
            docker push "$IMAGE_NAME_VERSION"
            docker push $DOCKER_USER/kraken-sockets:latest
      - run:
          name: Deploy
          command: |
            VERSION_TAG="0.1.$CIRCLE_BUILD_NUM"
            argocd app set kraken-sockets -p image.tag=$VERSION_TAG --grpc-web
            argocd app sync kraken-sockets --prune
      - run:
          name: Deploy Complete
          command: argocd app wait kraken-sockets

workflows:
  build-and-deploy:
    jobs:
      - build-and-deploy:
          context:
            - Kraken Env
      - deploy-prod:
          context:
            - Kraken Env
          requires:
            - build-and-deploy
          filters:
            branches:
              only:
                - main
                - master
